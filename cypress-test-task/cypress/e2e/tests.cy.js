/// <reference types="Cypress" />

describe('Test suite', () => {
    it('#2: should login user successfully if credentials are correct', () => {
        cy.visit('/')
        cy.get('div.login_container').should('be.visible')
        cy.get('#user-name').type('standard_user')
        cy.get('#password').type('secret_sauce')
        cy.get('#login-button').click()
        cy.get('span.title').should('have.text', 'Products')
        cy.get('#inventory_container').should('be.visible')
    })
    it('#3: should not login user with invalid credentials', () => {
        cy.visit('/')
        cy.get('#user-name').type('standard_user')
        cy.get('#password').type('incorrect_pass')
        cy.get('#login-button').click()
        cy.get('[data-test="error"]').should('be.visible').and('have.text', 'Epic sadface: Username and password do not match any user in this service')
    })
    it('#4: should add items to the cart', () => {
        cy.login()
        let amountOfItems = 2
        cy.addItemsToCart(amountOfItems)
        cy.get('span.shopping_cart_badge').should('have.text', amountOfItems)
    })
    it('#5: should successfully proceed to checkout', () => {
        cy.login()
        cy.addItemsToCart(2)
        cy.get('#shopping_cart_container a').click()
        cy.get('#checkout').click()
        cy.url().should('include', 'checkout-step-one')
        cy.get('span.title').should('have.text', 'Checkout: Your Information')
    })
    it('#6: should successfully provide user info', () => {
        cy.login()
        cy.addItemsToCart(2)
        cy.get('#shopping_cart_container a').click()
        cy.get('#checkout').click()
        cy.fillInTheForm()
        cy.url().should('include', 'checkout-step-two')
        cy.get('span.title').should('have.text', 'Checkout: Overview')
    })
    it('#7: should display total price for items', () => {
        cy.login()
        cy.addItemsToCart(2)
        cy.get('#shopping_cart_container a').click()
        cy.get('#checkout').click()
        cy.fillInTheForm()
        cy.url().should('include', 'checkout-step-two')
        cy.get('div.summary_total_label').should('be.visible')
    })
    it('#8: should make a checkout with correct prices with taxes', () => {
        cy.login()
        cy.addItemsToCart(2)
        cy.get('#shopping_cart_container a').click()
        cy.get('#checkout').click()
        cy.fillInTheForm()
        cy.url().should('include', 'checkout-step-two')
        cy.get('#checkout_summary_container').then( items => {
            let itemsTotal = items.find('div.summary_subtotal_label').text()
            itemsTotal = +itemsTotal.replace(/^\D+/g, '')
            let taxes = items.find('div.summary_tax_label').text()
            taxes = +taxes.replace(/^\D+/g, '')
            let total = items.find('div.summary_total_label').text()
            total = +total.replace(/^\D+/g, '')
            expect(total).to.eq(itemsTotal + taxes)
        })
    })
    it('#9: should submit a checkout', () => {
        cy.login()
        cy.addItemsToCart(2)
        cy.get('#shopping_cart_container a').click()
        cy.get('#checkout').click()
        cy.fillInTheForm()
        cy.url().should('include', 'checkout-step-two')
        cy.get('#finish').click()
        cy.url().should('include', 'checkout-complete')
        cy.get('h2.complete-header').should('have.text', 'Thank you for your order!')
    })
    it('#10: should successfully log out', () => {
        cy.login()
        cy.addItemsToCart(2)
        cy.get('#shopping_cart_container a').click()
        cy.get('#checkout').click()
        cy.fillInTheForm()
        cy.url().should('include', 'checkout-step-two')
        cy.get('#finish').click()
        cy.get('#react-burger-menu-btn').click()
        cy.get('a').contains('Logout').click()
        cy.get('div.login_container').should('be.visible')
    })
})